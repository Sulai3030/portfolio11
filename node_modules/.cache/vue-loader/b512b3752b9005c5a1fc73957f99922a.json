{"remainingRequest":"/Users/Sully/portfolio11/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/Sully/portfolio11/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/Sully/portfolio11/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Sully/portfolio11/src/views/Demo.vue?vue&type=template&id=5ad1f0c6&scoped=true&","dependencies":[{"path":"/Users/Sully/portfolio11/src/views/Demo.vue","mtime":1649367387511},{"path":"/Users/Sully/portfolio11/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Sully/portfolio11/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/Sully/portfolio11/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Sully/portfolio11/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}